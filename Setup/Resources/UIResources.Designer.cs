//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tauron.Application.CelloManager.Setup.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class UIResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UIResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tauron.Application.CelloManager.Setup.Resources.UIResources", typeof(UIResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back ähnelt.
        /// </summary>
        internal static string CommonBack {
            get {
                return ResourceManager.GetString("CommonBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        internal static string CommonCancel {
            get {
                return ResourceManager.GetString("CommonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finish ähnelt.
        /// </summary>
        internal static string CommonFinish {
            get {
                return ResourceManager.GetString("CommonFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        internal static string CommonNext {
            get {
                return ResourceManager.GetString("CommonNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copying ähnelt.
        /// </summary>
        internal static string InstallerMessageCopy {
            get {
                return ResourceManager.GetString("InstallerMessageCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Downloading ähnelt.
        /// </summary>
        internal static string InstallerMessageDownloading {
            get {
                return ResourceManager.GetString("InstallerMessageDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright (c) 2017 Alexander Bachmaier
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyright notice and this  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string LicenseText {
            get {
                return ResourceManager.GetString("LicenseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepare ähnelt.
        /// </summary>
        internal static string PrograssInitialMessage {
            get {
                return ResourceManager.GetString("PrograssInitialMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Location for Installation ähnelt.
        /// </summary>
        internal static string WinzadFolderBrowserDialogDescription {
            get {
                return ResourceManager.GetString("WinzadFolderBrowserDialogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Application ähnelt.
        /// </summary>
        internal static string WizardContentFinishStartAppLabel {
            get {
                return ResourceManager.GetString("WizardContentFinishStartAppLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is the installationprogramm for the Cello Manager. ähnelt.
        /// </summary>
        internal static string WizardContentWelcome {
            get {
                return ResourceManager.GetString("WizardContentWelcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Shortcut ähnelt.
        /// </summary>
        internal static string WizardCreateShortcutLabel {
            get {
                return ResourceManager.GetString("WizardCreateShortcutLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The installation was sucessfully Completed ähnelt.
        /// </summary>
        internal static string WizardDescriptionFinish {
            get {
                return ResourceManager.GetString("WizardDescriptionFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License permission ähnelt.
        /// </summary>
        internal static string WizardDescriptionLicense {
            get {
                return ResourceManager.GetString("WizardDescriptionLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please Wait while running Installation  ähnelt.
        /// </summary>
        internal static string WizardDescriptionProgress {
            get {
                return ResourceManager.GetString("WizardDescriptionProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select the directory for the installation ähnelt.
        /// </summary>
        internal static string WizardDescriptionSelectFolder {
            get {
                return ResourceManager.GetString("WizardDescriptionSelectFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I accept the above conditions ähnelt.
        /// </summary>
        internal static string WizardLicenseAcceptetLabel {
            get {
                return ResourceManager.GetString("WizardLicenseAcceptetLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse ähnelt.
        /// </summary>
        internal static string WizardSelectFolderBrowseLabel {
            get {
                return ResourceManager.GetString("WizardSelectFolderBrowseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The setup will install the Cello Manager in the following directory. ähnelt.
        /// </summary>
        internal static string WizardSelectFolderCommonLabel {
            get {
                return ResourceManager.GetString("WizardSelectFolderCommonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination Folder ähnelt.
        /// </summary>
        internal static string WizardSelectFolderGroupHeader {
            get {
                return ResourceManager.GetString("WizardSelectFolderGroupHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation Compled ähnelt.
        /// </summary>
        internal static string WizardTitleFinish {
            get {
                return ResourceManager.GetString("WizardTitleFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License ähnelt.
        /// </summary>
        internal static string WizardTitleLicense {
            get {
                return ResourceManager.GetString("WizardTitleLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install Running ähnelt.
        /// </summary>
        internal static string WizardTitleProgress {
            get {
                return ResourceManager.GetString("WizardTitleProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Application Folder ähnelt.
        /// </summary>
        internal static string WizardTitleSelectFolder {
            get {
                return ResourceManager.GetString("WizardTitleSelectFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Welcome to Colle Manager Setup ähnelt.
        /// </summary>
        internal static string WizardTitleWerlcome {
            get {
                return ResourceManager.GetString("WizardTitleWerlcome", resourceCulture);
            }
        }
    }
}
