<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommonNext" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="CommonBack" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="CommonCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CommonFinish" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="WizardTitleWerlcome" xml:space="preserve">
    <value>Willkommen zur Installation vom Cello Manager</value>
  </data>
  <data name="WizardContentWelcome" xml:space="preserve">
    <value>Dies ist das Installationsprogramm für den Cello Manager.</value>
  </data>
  <data name="WizardTitleFinish" xml:space="preserve">
    <value>Installation Beendet</value>
  </data>
  <data name="WizardDescriptionFinish" xml:space="preserve">
    <value>Die Installation wure erfolgreich Beeendet</value>
  </data>
  <data name="WizardContentFinishStartAppLabel" xml:space="preserve">
    <value>Anwendung Starten</value>
  </data>
  <data name="WizardTitleProgress" xml:space="preserve">
    <value>Installation läuft</value>
  </data>
  <data name="WizardDescriptionProgress" xml:space="preserve">
    <value>Bitte Warten. Installation Läuft</value>
  </data>
  <data name="PrograssInitialMessage" xml:space="preserve">
    <value>Vorbereitung</value>
  </data>
  <data name="LicenseText" xml:space="preserve">
    <value>Copyright (c) 2017 Alexander Bachmaier
Hiermit wird unentgeltlich jeder Person, die eine Kopie der Software und der zugehörigen Dokumentationen (die "Software") erhält, die Erlaubnis erteilt, sie uneingeschränkt zu nutzen, inklusive und ohne Ausnahme mit dem Recht, sie zu verwenden, zu kopieren, zu verändern, zusammenzufügen, zu veröffentlichen, zu verbreiten, zu unterlizenzieren und/oder zu verkaufen, und Personen, denen diese Software überlassen wird, diese Rechte zu verschaffen, unter den folgenden Bedingungen:

Der obige Urheberrechtsvermerk und dieser Erlaubnisvermerk sind in allen Kopien oder Teilkopien der Software beizulegen.

DIE SOFTWARE WIRD OHNE JEDE AUSDRÜCKLICHE ODER IMPLIZIERTE GARANTIE BEREITGESTELLT, EINSCHLIEẞLICH DER GARANTIE ZUR BENUTZUNG FÜR DEN VORGESEHENEN ODER EINEM BESTIMMTEN ZWECK SOWIE JEGLICHER RECHTSVERLETZUNG, JEDOCH NICHT DARAUF BESCHRÄNKT. IN KEINEM FALL SIND DIE AUTOREN ODER COPYRIGHTINHABER FÜR JEGLICHEN SCHADEN ODER SONSTIGE ANSPRÜCHE HAFTBAR ZU MACHEN, OB INFOLGE DER ERFÜLLUNG EINES VERTRAGES, EINES DELIKTES ODER ANDERS IM ZUSAMMENHANG MIT DER SOFTWARE ODER SONSTIGER VERWENDUNG DER SOFTWARE ENTSTANDEN.</value>
  </data>
  <data name="WizardTitleLicense" xml:space="preserve">
    <value>Lizenz</value>
  </data>
  <data name="WizardDescriptionLicense" xml:space="preserve">
    <value>Lizenz Vereinbarung</value>
  </data>
  <data name="WizardLicenseAcceptetLabel" xml:space="preserve">
    <value>Ich akzeptiere die oben genannten Bedingungen</value>
  </data>
  <data name="WizardTitleSelectFolder" xml:space="preserve">
    <value>Bitte Anwednugspfad Wählen</value>
  </data>
  <data name="WizardDescriptionSelectFolder" xml:space="preserve">
    <value>Bitte wähle das Verzeichnis für die Installation</value>
  </data>
  <data name="WizardSelectFolderCommonLabel" xml:space="preserve">
    <value>Das Setup wird den Cello Manager in folgendem Verzeichnis Installieren.</value>
  </data>
  <data name="WizardSelectFolderGroupHeader" xml:space="preserve">
    <value>Ziel Verzeichnis</value>
  </data>
  <data name="WizardSelectFolderBrowseLabel" xml:space="preserve">
    <value>Suchen</value>
  </data>
  <data name="InstallerMessageDownloading" xml:space="preserve">
    <value>Beim Herunterladen</value>
  </data>
  <data name="InstallerMessageCopy" xml:space="preserve">
    <value>Daten werden Kopiert</value>
  </data>
  <data name="WinzadFolderBrowserDialogDescription" xml:space="preserve">
    <value>Verzeichnis für die Installation Wählen</value>
  </data>
  <data name="WizardCreateShortcutLabel" xml:space="preserve">
    <value>Verknüpfung erstellen</value>
  </data>
</root>