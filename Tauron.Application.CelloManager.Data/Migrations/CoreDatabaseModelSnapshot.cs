// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Tauron.Application.CelloManager.Data.Core;

namespace Tauron.Application.CelloManager.Data.Migrations
{
    [DbContext(typeof(CoreDatabase))]
    partial class CoreDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ChangeDetector.SkipDetectChanges", "true")
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Tauron.Application.CelloManager.Data.Core.OptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.Property<string>("key");

                    b.HasKey("Id");

                    b.ToTable("OptionEntries");
                });

            modelBuilder.Entity("Tauron.Application.CelloManager.Data.Historie.CommittedRefillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CompledTime");

                    b.Property<bool>("IsCompleted");

                    b.Property<DateTime>("SentTime");

                    b.HasKey("Id");

                    b.ToTable("CommittedRefills");
                });

            modelBuilder.Entity("Tauron.Application.CelloManager.Data.Historie.CommittedSpoolEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CommittedRefillEntityId");

                    b.Property<string>("Name");

                    b.Property<int>("OrderedCount");

                    b.Property<int>("SpoolId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CommittedRefillEntityId");

                    b.ToTable("CommittedSpoolEntity");
                });

            modelBuilder.Entity("Tauron.Application.CelloManager.Data.Manager.CelloSpoolEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("Name");

                    b.Property<int>("Neededamount");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("CelloSpools");
                });

            modelBuilder.Entity("Tauron.Application.CelloManager.Data.Historie.CommittedSpoolEntity", b =>
                {
                    b.HasOne("Tauron.Application.CelloManager.Data.Historie.CommittedRefillEntity")
                        .WithMany("CommitedSpools")
                        .HasForeignKey("CommittedRefillEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
